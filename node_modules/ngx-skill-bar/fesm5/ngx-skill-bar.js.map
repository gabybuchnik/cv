{"version":3,"file":"ngx-skill-bar.js.map","sources":["ng://ngx-skill-bar/lib/bar.model.ts","ng://ngx-skill-bar/lib/ngx-skill-bar.component.ts","ng://ngx-skill-bar/lib/statistics-bar/statistics-bar.component.ts","ng://ngx-skill-bar/lib/statistics-list-bar/statistics-list-bar.component.ts","ng://ngx-skill-bar/lib/ngx-skill-bar.module.ts"],"sourcesContent":["export class Bar {\n  width: number;\n\n  constructor(width: number = 100) {\n    this.width = width;\n  }\n}\n","import { Component, OnInit, Input, OnChanges } from \"@angular/core\";\nimport { Bar } from \"./bar.model\";\n\n@Component({\n  selector: \"ngx-skill-bar\",\n  template: `\n    <statistics-list-bar [full]=\"full\" [barWidth]=\"barWidth\" [showFigures]=\"showFigures\" [percentage]=\"percentage\" [bars]=\"bars\" [bgColor]=\"bgColor\" [color]=\"color\"></statistics-list-bar>\n  `,\n  styles: []\n})\nexport class NgxSkillBarComponent implements OnInit, OnChanges {\n  @Input() percentage: number = 0;\n  @Input() numberOfBars = 5;\n  @Input() showFigures: boolean;\n  @Input() bgColor: string;\n  @Input() color: string;\n  @Input() barWidth: number;\n  @Input() full: boolean;\n\n  standarWidthBar: number = 20;\n  bars: Bar[];\n\n  constructor() {}\n\n  ngOnChanges() {\n    this.init();\n  }\n\n  ngOnInit() {\n    this.init();\n  }\n\n  init() {\n    this.standarWidthBar = 100 / this.numberOfBars;\n    this.bars = [...this.generateLine()];\n  }\n\n  generateLine() {\n    let bars: Bar[] = [];\n    for (let i = 1; i <= this.numberOfBars; i++) {\n      bars = [...bars, new Bar(this.calculateBar(i))];\n    }\n    return bars;\n  }\n\n  calculateBar(indexBar: number): number {\n    const substraction =\n      this.percentage - (indexBar - 1) * this.standarWidthBar;\n    if (this.percentage >= indexBar * this.standarWidthBar) {\n      return 100;\n    } else if (substraction > 0) {\n      return (substraction * 100) / this.standarWidthBar;\n    }\n    return 0;\n  }\n}\n","import {\n  Component,\n  OnChanges,\n  ChangeDetectorRef,\n  OnInit,\n  Input\n} from \"@angular/core\";\n\n@Component({\n  selector: \"statistics-bar\",\n  template: `<div class=\"bar\" \n  [ngStyle]=\"{'background-color': bgColor, 'width': barWidth+'px'}\">\n  <div [ngStyle]=\"{'width': width+'%', 'background-color': color}\"></div>\n</div>`,\n  styles: [`.bar{background-color:#644d4d;height:9px;width:40px}.bar>div{background-color:#fff;height:9px}`]\n})\nexport class StatisticsBarComponent implements OnInit, OnChanges {\n  @Input() width: number = 0;\n  @Input() bgColor: string = \"#644d4d\";\n  @Input() color: string = \"white\";\n  @Input() barWidth: number = 40;\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnInit() {}\n\n  ngOnChanges() {}\n}\n","import { Component, OnInit, OnChanges, Input } from \"@angular/core\";\nimport { Bar } from \"../bar.model\";\n\nconst DEFAULT_PADDING: number = 2;\n\n@Component({\n  selector: \"statistics-list-bar\",\n  template: `<div class=\"statistics-container\">\n    <statistics-bar \n        class=\"statistics-item\" \n        *ngFor=\"let bar of bars\"  \n        [width]=\"bar.width\" \n        [bgColor]=\"bgColor\" \n        [color]=\"color\" \n        [barWidth]=\"barWidth\"\n        [ngStyle]=\"{'padding': padding+'px'}\"\n        ></statistics-bar>\n    <div class=\"figures\" *ngIf=\"showFigures\">{{percentage}}%</div>\n</div>\n`,\n  styles: [`.statistics-container{display:flex;flex-wrap:wrap}.statistics-item{margin-top:1px;padding:2px}.figures{margin-top:-4px;margin-left:4px}`]\n})\nexport class StatisticsListBarComponent implements OnChanges, OnInit {\n  @Input() bars: Bar[] = [];\n  @Input() showFigures: boolean = false;\n  @Input() percentage: number = 0;\n  @Input() bgColor: string;\n  @Input() color: string;\n  @Input() barWidth: number;\n  @Input() full: boolean = false;\n  padding: number = DEFAULT_PADDING;\n\n  constructor() {}\n\n  ngOnInit() {\n    if (this.full == true) {\n      this.padding = 0;\n    } else {\n      this.padding = DEFAULT_PADDING;\n    }\n  }\n\n  ngOnChanges() {}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgxSkillBarComponent } from \"./ngx-skill-bar.component\";\nimport { StatisticsBarComponent } from \"./statistics-bar/statistics-bar.component\";\nimport { StatisticsListBarComponent } from \"./statistics-list-bar/statistics-list-bar.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    NgxSkillBarComponent,\n    StatisticsBarComponent,\n    StatisticsListBarComponent\n  ],\n  exports: [NgxSkillBarComponent]\n})\nexport class NgxSkillBarModule {}\n"],"names":[],"mappings":";;;;;;;;AAAA,IAAA;IAGE,aAAY,KAAmB;QAAnB,sBAAA,EAAA,WAAmB;QAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;cALH;IAMC,CAAA;;;;;;;ICgBC;0BAX8B,CAAC;4BACP,CAAC;+BAOC,EAAE;KAGZ;;;;IAEhB,0CAAW;;;IAAX;QACE,IAAI,CAAC,IAAI,EAAE,CAAC;KACb;;;;IAED,uCAAQ;;;IAAR;QACE,IAAI,CAAC,IAAI,EAAE,CAAC;KACb;;;;IAED,mCAAI;;;IAAJ;QACE,IAAI,CAAC,eAAe,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC;QAC/C,IAAI,CAAC,IAAI,YAAO,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;KACtC;;;;IAED,2CAAY;;;IAAZ;QACE,qBAAI,IAAI,GAAU,EAAE,CAAC;QACrB,KAAK,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE;YAC3C,IAAI,YAAO,IAAI,GAAE,IAAI,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC;SACjD;QACD,OAAO,IAAI,CAAC;KACb;;;;;IAED,2CAAY;;;;IAAZ,UAAa,QAAgB;QAC3B,qBAAM,YAAY,GAChB,IAAI,CAAC,UAAU,GAAG,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,IAAI,QAAQ,GAAG,IAAI,CAAC,eAAe,EAAE;YACtD,OAAO,GAAG,CAAC;SACZ;aAAM,IAAI,YAAY,GAAG,CAAC,EAAE;YAC3B,OAAO,CAAC,YAAY,GAAG,GAAG,IAAI,IAAI,CAAC,eAAe,CAAC;SACpD;QACD,OAAO,CAAC,CAAC;KACV;;gBAnDF,SAAS,SAAC;oBACT,QAAQ,EAAE,eAAe;oBACzB,QAAQ,EAAE,iNAET;oBACD,MAAM,EAAE,EAAE;iBACX;;;;;6BAEE,KAAK;+BACL,KAAK;8BACL,KAAK;0BACL,KAAK;wBACL,KAAK;2BACL,KAAK;uBACL,KAAK;;+BAjBR;;;;;;;ACAA;IAsBE,gCAAoB,GAAsB;QAAtB,QAAG,GAAH,GAAG,CAAmB;qBALjB,CAAC;uBACC,SAAS;qBACX,OAAO;wBACJ,EAAE;KAEgB;;;;IAE9C,yCAAQ;;;IAAR,eAAa;;;;IAEb,4CAAW;;;IAAX,eAAgB;;gBAlBjB,SAAS,SAAC;oBACT,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,kLAGL;oBACL,MAAM,EAAE,CAAC,gGAAgG,CAAC;iBAC3G;;;;gBAZC,iBAAiB;;;wBAchB,KAAK;0BACL,KAAK;wBACL,KAAK;2BACL,KAAK;;iCApBR;;;;;;;ACAA,AAGA,qBAAM,eAAe,GAAW,CAAC,CAAC;;IA6BhC;oBATuB,EAAE;2BACO,KAAK;0BACP,CAAC;oBAIN,KAAK;uBACZ,eAAe;KAEjB;;;;IAEhB,6CAAQ;;;IAAR;QACE,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;YACrB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;SAClB;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,eAAe,CAAC;SAChC;KACF;;;;IAED,gDAAW;;;IAAX,eAAgB;;gBArCjB,SAAS,SAAC;oBACT,QAAQ,EAAE,qBAAqB;oBAC/B,QAAQ,EAAE,kaAYX;oBACC,MAAM,EAAE,CAAC,yIAAyI,CAAC;iBACpJ;;;;;uBAEE,KAAK;8BACL,KAAK;6BACL,KAAK;0BACL,KAAK;wBACL,KAAK;2BACL,KAAK;uBACL,KAAK;;qCA7BR;;;;;;;ACAA;;;;gBAMC,QAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE;wBACZ,oBAAoB;wBACpB,sBAAsB;wBACtB,0BAA0B;qBAC3B;oBACD,OAAO,EAAE,CAAC,oBAAoB,CAAC;iBAChC;;4BAdD;;;;;;;;;;;;;;;"}
