/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, Input } from "@angular/core";
var /** @type {?} */ DEFAULT_PADDING = 2;
var StatisticsListBarComponent = /** @class */ (function () {
    function StatisticsListBarComponent() {
        this.bars = [];
        this.showFigures = false;
        this.percentage = 0;
        this.full = false;
        this.padding = DEFAULT_PADDING;
    }
    /**
     * @return {?}
     */
    StatisticsListBarComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.full == true) {
            this.padding = 0;
        }
        else {
            this.padding = DEFAULT_PADDING;
        }
    };
    /**
     * @return {?}
     */
    StatisticsListBarComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () { };
    StatisticsListBarComponent.decorators = [
        { type: Component, args: [{
                    selector: "statistics-list-bar",
                    template: "<div class=\"statistics-container\">\n    <statistics-bar \n        class=\"statistics-item\" \n        *ngFor=\"let bar of bars\"  \n        [width]=\"bar.width\" \n        [bgColor]=\"bgColor\" \n        [color]=\"color\" \n        [barWidth]=\"barWidth\"\n        [ngStyle]=\"{'padding': padding+'px'}\"\n        ></statistics-bar>\n    <div class=\"figures\" *ngIf=\"showFigures\">{{percentage}}%</div>\n</div>\n",
                    styles: [".statistics-container{display:flex;flex-wrap:wrap}.statistics-item{margin-top:1px;padding:2px}.figures{margin-top:-4px;margin-left:4px}"]
                },] },
    ];
    /** @nocollapse */
    StatisticsListBarComponent.ctorParameters = function () { return []; };
    StatisticsListBarComponent.propDecorators = {
        bars: [{ type: Input }],
        showFigures: [{ type: Input }],
        percentage: [{ type: Input }],
        bgColor: [{ type: Input }],
        color: [{ type: Input }],
        barWidth: [{ type: Input }],
        full: [{ type: Input }]
    };
    return StatisticsListBarComponent;
}());
export { StatisticsListBarComponent };
function StatisticsListBarComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    StatisticsListBarComponent.prototype.bars;
    /** @type {?} */
    StatisticsListBarComponent.prototype.showFigures;
    /** @type {?} */
    StatisticsListBarComponent.prototype.percentage;
    /** @type {?} */
    StatisticsListBarComponent.prototype.bgColor;
    /** @type {?} */
    StatisticsListBarComponent.prototype.color;
    /** @type {?} */
    StatisticsListBarComponent.prototype.barWidth;
    /** @type {?} */
    StatisticsListBarComponent.prototype.full;
    /** @type {?} */
    StatisticsListBarComponent.prototype.padding;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGlzdGljcy1saXN0LWJhci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtc2tpbGwtYmFyLyIsInNvdXJjZXMiOlsibGliL3N0YXRpc3RpY3MtbGlzdC1iYXIvc3RhdGlzdGljcy1saXN0LWJhci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUdwRSxxQkFBTSxlQUFlLEdBQVcsQ0FBQyxDQUFDOztJQTZCaEM7b0JBVHVCLEVBQUU7MkJBQ08sS0FBSzswQkFDUCxDQUFDO29CQUlOLEtBQUs7dUJBQ1osZUFBZTtLQUVqQjs7OztJQUVoQiw2Q0FBUTs7O0lBQVI7UUFDRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDdEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUM7U0FDbEI7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNOLElBQUksQ0FBQyxPQUFPLEdBQUcsZUFBZSxDQUFDO1NBQ2hDO0tBQ0Y7Ozs7SUFFRCxnREFBVzs7O0lBQVgsZUFBZ0I7O2dCQXJDakIsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxxQkFBcUI7b0JBQy9CLFFBQVEsRUFBRSxrYUFZWDtvQkFDQyxNQUFNLEVBQUUsQ0FBQyx5SUFBeUksQ0FBQztpQkFDcEo7Ozs7O3VCQUVFLEtBQUs7OEJBQ0wsS0FBSzs2QkFDTCxLQUFLOzBCQUNMLEtBQUs7d0JBQ0wsS0FBSzsyQkFDTCxLQUFLO3VCQUNMLEtBQUs7O3FDQTdCUjs7U0FzQmEsMEJBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIE9uQ2hhbmdlcywgSW5wdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQmFyIH0gZnJvbSBcIi4uL2Jhci5tb2RlbFwiO1xuXG5jb25zdCBERUZBVUxUX1BBRERJTkc6IG51bWJlciA9IDI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJzdGF0aXN0aWNzLWxpc3QtYmFyXCIsXG4gIHRlbXBsYXRlOiBgPGRpdiBjbGFzcz1cInN0YXRpc3RpY3MtY29udGFpbmVyXCI+XG4gICAgPHN0YXRpc3RpY3MtYmFyIFxuICAgICAgICBjbGFzcz1cInN0YXRpc3RpY3MtaXRlbVwiIFxuICAgICAgICAqbmdGb3I9XCJsZXQgYmFyIG9mIGJhcnNcIiAgXG4gICAgICAgIFt3aWR0aF09XCJiYXIud2lkdGhcIiBcbiAgICAgICAgW2JnQ29sb3JdPVwiYmdDb2xvclwiIFxuICAgICAgICBbY29sb3JdPVwiY29sb3JcIiBcbiAgICAgICAgW2JhcldpZHRoXT1cImJhcldpZHRoXCJcbiAgICAgICAgW25nU3R5bGVdPVwieydwYWRkaW5nJzogcGFkZGluZysncHgnfVwiXG4gICAgICAgID48L3N0YXRpc3RpY3MtYmFyPlxuICAgIDxkaXYgY2xhc3M9XCJmaWd1cmVzXCIgKm5nSWY9XCJzaG93RmlndXJlc1wiPnt7cGVyY2VudGFnZX19JTwvZGl2PlxuPC9kaXY+XG5gLFxuICBzdHlsZXM6IFtgLnN0YXRpc3RpY3MtY29udGFpbmVye2Rpc3BsYXk6ZmxleDtmbGV4LXdyYXA6d3JhcH0uc3RhdGlzdGljcy1pdGVte21hcmdpbi10b3A6MXB4O3BhZGRpbmc6MnB4fS5maWd1cmVze21hcmdpbi10b3A6LTRweDttYXJnaW4tbGVmdDo0cHh9YF1cbn0pXG5leHBvcnQgY2xhc3MgU3RhdGlzdGljc0xpc3RCYXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMsIE9uSW5pdCB7XG4gIEBJbnB1dCgpIGJhcnM6IEJhcltdID0gW107XG4gIEBJbnB1dCgpIHNob3dGaWd1cmVzOiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgpIHBlcmNlbnRhZ2U6IG51bWJlciA9IDA7XG4gIEBJbnB1dCgpIGJnQ29sb3I6IHN0cmluZztcbiAgQElucHV0KCkgY29sb3I6IHN0cmluZztcbiAgQElucHV0KCkgYmFyV2lkdGg6IG51bWJlcjtcbiAgQElucHV0KCkgZnVsbDogYm9vbGVhbiA9IGZhbHNlO1xuICBwYWRkaW5nOiBudW1iZXIgPSBERUZBVUxUX1BBRERJTkc7XG5cbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIGlmICh0aGlzLmZ1bGwgPT0gdHJ1ZSkge1xuICAgICAgdGhpcy5wYWRkaW5nID0gMDtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5wYWRkaW5nID0gREVGQVVMVF9QQURESU5HO1xuICAgIH1cbiAgfVxuXG4gIG5nT25DaGFuZ2VzKCkge31cbn1cbiJdfQ==